name: üöÄ Release

on:
  # ‚¨áÔ∏è Se d√©clenche automatiquement sur tout nouveau tag commen√ßant par v
  push:
    tags:
      - 'v*'
  # ‚¨áÔ∏è Permet aussi de lancer manuellement la release depuis GitHub Actions
  workflow_dispatch:
    inputs:
      version:
        description: 'Version √† publier (ex: v0.4.0-alpha.4)'
        required: false
        default: ''

permissions:
  contents: write   # ‚¨ÖÔ∏è n√©cessaire pour cr√©er la release

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ‚¨ÖÔ∏è r√©cup√®re l‚Äôhistorique complet et les tags

      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y make

      - name: Set VERSION (from tag or manual input)
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi
          echo "Version utilis√©e: $VERSION"

      - name: Ensure exec bits & LF
        run: |
          chmod +x install.sh || true
          chmod +x scripts/menu.sh || true
          chmod +x scripts/bin/sys_info.sh || true
          chmod +x scripts/shell_select.sh 2>/dev/null || true
          # V√©rifie la pr√©sence de CRLF accidentels
          if file install.sh | grep -qi crlf; then
            echo "‚ö†Ô∏è CRLF detected in install.sh"; exit 1; fi

      - name: Build package
        run: make package

      - name: Verify build output
        run: |
          ls -lh dist || (echo "‚ùå No dist directory found" && exit 1)
          if [ ! -f "dist/menu-shells-${VERSION}.tar.gz" ]; then
            echo "‚ùå Package not found: dist/menu-shells-${VERSION}.tar.gz"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          prerelease: ${{ contains(env.VERSION, '-alpha') || contains(env.VERSION, '-beta') || contains(env.VERSION, '-rc') }}
          generate_release_notes: true

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: dist/menu-shells-${{ env.VERSION }}.tar.gz
